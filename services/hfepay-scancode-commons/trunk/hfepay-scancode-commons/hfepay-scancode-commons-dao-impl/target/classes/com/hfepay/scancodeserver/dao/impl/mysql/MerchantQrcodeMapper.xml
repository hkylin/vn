<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="MerchantQrcode">
	<resultMap id="BaseResultMap" type="com.hfepay.scancode.commons.entity.MerchantQrcode">
        <result property="id" column="A_id"/>
        <result property="qrCode" column="A_qr_code"/>
        <result property="merchantNo" column="A_merchant_no"/>
        <result property="channelNo" column="A_channel_no"/>
        <result property="agentNo" column="A_agent_no"/>
        <result property="qrName" column="A_qr_name"/>
        <result property="qrDesc" column="A_qr_desc"/>
        <result property="image" column="A_image"/>
        <result property="storeId" column="A_store_id"/>
        <result property="qrStatus" column="A_qr_status"/>
        <result property="recordStatus" column="A_record_status"/>
        <result property="createTime" column="A_create_time"/>
        <result property="updateTime" column="A_update_time"/>
        <result property="operator" column="A_operator"/>
        <result property="remark" column="A_remark"/>
        <result property="temp1" column="A_temp_1"/>
        <result property="temp2" column="A_temp_2"/>
        <result property="temp3" column="A_temp_3"/>
        <result property="temp4" column="A_temp_4"/>
	</resultMap>
	
	<resultMap id="BaseResultMapVo" type="com.hfepay.scancode.commons.entity.MerchantQrcode" extends="BaseResultMap">
        <result property="merchantName" column="merchant_name"/>
		<result property="operatorName" column="operator_name"/>
        <result property="storeName" column="store_name"/>
        <result property="channelName" column="channel_name"/>
        <result property="agentName" column="agent_name"/>
        <result property="qrType" column="qr_type"/>
	</resultMap>
	
	<resultMap id="BaseResultMapDTO" type="com.hfepay.scancode.commons.dto.MerchantQrcodeDTO" extends="BaseResultMap">
        <result property="isCashier" column="A_is_cashier"/>
        <result property="qid" column="A_qid"/>
	</resultMap>
	
	<sql id="Base_Column_List">
	    <![CDATA[
		A.id as A_id,A.qr_code as A_qr_code,A.merchant_no as A_merchant_no,A.channel_no as A_channel_no,A.agent_no as A_agent_no,A.qr_name as A_qr_name,A.qr_desc as A_qr_desc,A.image as A_image,A.store_id as A_store_id,A.qr_status as A_qr_status,A.record_status as A_record_status,A.create_time as A_create_time,A.update_time as A_update_time,A.operator as A_operator,A.remark as A_remark,A.temp_1 as A_temp_1,A.temp_2 as A_temp_2
	    ]]>
	</sql>
	
	<sql id="Common_Column_List">
	    <![CDATA[
		A.id,A.qr_code,A.merchant_no,A.channel_no,A.agent_no,A.qr_name,A.qr_desc,A.image,A.store_id,A.qr_status,A.record_status,A.create_time,A.update_time,A.operator,A.remark ,A.temp_1 ,A.temp_2
	    ]]>
	</sql>
	
	<sql id="channel_filter">
	    <if test="params.nodeSeq != null" >
        	EXISTS (
				SELECT
					n.current_node
				FROM
					t_node_relation n
				WHERE
				 <if test="params.identityFlag != null" >
					 n.identity_flag = '${params.identityFlag}' and
				</if>
					 n.node_seq like CONCAT('${params.nodeSeq}','%') and A.merchant_no = n.current_node)
				<if test="@com.hfepay.commons.base.collection.Collections@isNotEmpty(conditions)"> AND </if> 
      	</if>
	</sql>
	
	<select id="findByCriteria" parameterType="com.hfepay.commons.criteria.Criteria" resultMap="BaseResultMapVo" >
	select <include refid="Base_Column_List" />,qr_type from (
    select
    <include refid="Common_Column_List" />,2 as qr_type
     from t_merchant_qrcode A
    <if test="_parameter != null and _parameter != '' " >
      <where >
      	<include refid="channel_filter" />
        <include refid="Global.Where_Clause" />
      </where>
    </if>
    union
    select
    <include refid="Common_Column_List" />,1 as qr_type
     from t_merchant_info C
     left join t_platform_qrcode A on A.merchant_no = C.merchant_no
    <if test="_parameter != null and _parameter != '' " >
      <where >
      	<include refid="channel_filter" />
        <include refid="Global.Where_Clause" />
      </where>
    </if>
    ) A
    <if test="hasOrderBy" >
      order by
      <foreach collection="orderBys" item="orderBy" separator="," > ${orderBy} </foreach>
    </if>
  </select>
  <select resultMap="BaseResultMapVo" parameterType="java.lang.String" id="findById" >
    select 
    <include refid="Base_Column_List" />,B.short_name as operator_name,C.merchant_name,D.store_name,E.channel_name as channel_name,F.agent_name
    from t_merchant_qrcode A left join t_sys_admin B on A.operator = B.id 
    left join t_merchant_info C on A.merchant_no = C.merchant_no
    left join t_merchant_store D on A.store_id = D.store_no
    left join t_channel_base E on A.channel_no =E.channel_no 
     left join t_agent_base F on A.agent_no = F.agent_no 
    where A.id = #{id}
  </select>
  <delete parameterType="java.lang.String" id="deleteById" >
    delete from t_merchant_qrcode
    where id = #{id}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.hfepay.commons.criteria.Criteria" >
    delete A from t_merchant_qrcode A
    <if test="_parameter != null and _parameter != '' " >
      <where >
        <include refid="Global.Where_Clause" />
      </where>
    </if>
  </delete>
  <insert id="insert" parameterType="com.hfepay.scancode.commons.entity.MerchantQrcode" >
    insert into t_merchant_qrcode (
        	id,
        	qr_code,
        	merchant_no,
        	channel_no,
        	agent_no,
        	qr_name,
        	qr_desc,
        	image,
        	store_id,
        	qr_status,
        	record_status,
        	create_time,
        	update_time,
        	operator,
        	remark,
        	temp_1,
        	temp_2,
        	temp_3,
        	temp_4
        )
    values (
        	#{id},
        	#{qrCode},
        	#{merchantNo},
        	#{channelNo},
        	#{agentNo},
        	#{qrName},
        	#{qrDesc},
        	#{image},
        	#{storeId},
        	#{qrStatus},
        	#{recordStatus},
        	#{createTime},
        	#{updateTime},
        	#{operator},
        	#{remark},
        	#{temp1},
        	#{temp2},
        	#{temp3},
        	#{temp4}
    )
  </insert>
  <select id="countByCriteria" parameterType="com.hfepay.commons.criteria.Criteria" resultType="java.lang.Integer" >    
    select count(1) from (
    select
    <include refid="Common_Column_List" />,2 as qr_type
     from t_merchant_qrcode A
    <if test="_parameter != null and _parameter != '' " >
      <where >
      	<include refid="channel_filter" />
        <include refid="Global.Where_Clause" />
      </where>
    </if>
    union
    select
    <include refid="Common_Column_List" />,1 as qr_type
     from t_merchant_info C
     left join t_platform_qrcode A on A.merchant_no = C.merchant_no
    <if test="_parameter != null and _parameter != '' " >
      <where >
      	<include refid="channel_filter" />
        <include refid="Global.Where_Clause" />
      </where>
    </if>
    ) A
  </select>
  <update id="updateByCriteria" parameterType="map" >
    update t_merchant_qrcode A
    <set >
	        	<if test="record.id != null and record.id != '' " >
	        		A.id = #{record.id},
	      		</if>
	        	<if test="record.qrCode != null and record.qrCode != '' " >
	        		A.qr_code = #{record.qrCode},
	      		</if>
	        	<if test="record.merchantNo != null and record.merchantNo != '' " >
	        		A.merchant_no = #{record.merchantNo},
	      		</if>
	        	<if test="record.channelNo != null and record.channelNo != '' " >
	        		A.channel_no = #{record.channelNo},
	      		</if>
	        	<if test="record.agentNo != null and record.agentNo != '' " >
	        		A.agent_no = #{record.agentNo},
	      		</if>
	        	<if test="record.qrName != null and record.qrName != '' " >
	        		A.qr_name = #{record.qrName},
	      		</if>
	        	<if test="record.qrDesc != null and record.qrDesc != '' " >
	        		A.qr_desc = #{record.qrDesc},
	      		</if>
	        	<if test="record.image != null and record.image != '' " >
	        		A.image = #{record.image},
	      		</if>
	        	<if test="record.storeId != null and record.storeId != '' " >
	        		A.store_id = #{record.storeId},
	      		</if>
	        	<if test="record.qrStatus != null and record.qrStatus != '' " >
	        		A.qr_status = #{record.qrStatus},
	      		</if>
	        	<if test="record.recordStatus != null and record.recordStatus != '' " >
	        		A.record_status = #{record.recordStatus},
	      		</if>
	        	<if test="record.createTime != null and record.createTime != '' " >
	        		A.create_time = #{record.createTime},
	      		</if>
	        	<if test="record.updateTime != null and record.updateTime != '' " >
	        		A.update_time = #{record.updateTime},
	      		</if>
	        	<if test="record.operator != null and record.operator != '' " >
	        		A.operator = #{record.operator},
	      		</if>
	        	<if test="record.remark != null and record.remark != '' " >
	        		A.remark = #{record.remark},
	      		</if>
	        	<if test="record.temp1 != null and record.temp1 != '' " >
	        		A.temp_1 = #{record.temp1},
	      		</if>
	        	<if test="record.temp2 != null and record.temp2 != '' " >
	        		A.temp_2 = #{record.temp2},
	      		</if>
	        	<if test="record.temp3 != null and record.temp3 != '' " >
	        		A.temp_3 = #{record.temp3},
	      		</if>
	        	<if test="record.temp4 != null and record.temp4 != '' " >
	        		A.temp_4 = #{record.temp4},
	      		</if>
    </set>
    <if test="_parameter != null and _parameter != '' " >
      <where >
        <include refid="Global.Where_Clause" />
      </where>
    </if>
  </update>
  <update id="update" parameterType="com.hfepay.scancode.commons.entity.MerchantQrcode" >
    update t_merchant_qrcode A
    <set >
	        	<if test="id != null and id != '' " >
	        		A.id = #{id},
	      		</if>
	        	<if test="qrCode != null and qrCode != '' " >
	        		A.qr_code = #{qrCode},
	      		</if>
	        	<if test="merchantNo != null and merchantNo != '' " >
	        		A.merchant_no = #{merchantNo},
	      		</if>
	        	<if test="channelNo != null and channelNo != '' " >
	        		A.channel_no = #{channelNo},
	      		</if>
	        	<if test="agentNo != null and agentNo != '' " >
	        		A.agent_no = #{agentNo},
	      		</if>
	        	<if test="qrName != null and qrName != '' " >
	        		A.qr_name = #{qrName},
	      		</if>
	        	<if test="qrDesc != null and qrDesc != '' " >
	        		A.qr_desc = #{qrDesc},
	      		</if>
	        	<if test="image != null and image != '' " >
	        		A.image = #{image},
	      		</if>
	        	<if test="storeId != null and storeId != '' " >
	        		A.store_id = #{storeId},
	      		</if>
	        	<if test="qrStatus != null and qrStatus != '' " >
	        		A.qr_status = #{qrStatus},
	      		</if>
	        	<if test="recordStatus != null and recordStatus != '' " >
	        		A.record_status = #{recordStatus},
	      		</if>
	        	<if test="createTime != null and createTime != '' " >
	        		A.create_time = #{createTime},
	      		</if>
	        	<if test="updateTime != null and updateTime != '' " >
	        		A.update_time = #{updateTime},
	      		</if>
	        	<if test="operator != null and operator != '' " >
	        		A.operator = #{operator},
	      		</if>
	        	<if test="remark != null and remark != '' " >
	        		A.remark = #{remark},
	      		</if>
	        	<if test="temp1 != null and temp1 != '' " >
	        		A.temp_1 = #{temp1},
	      		</if>
	        	<if test="temp2 != null and temp2 != '' " >
	        		A.temp_2 = #{temp2},
	      		</if>
	        	<if test="temp3 != null and temp3 != '' " >
	        		A.temp_3 = #{temp3},
	      		</if>
	        	<if test="temp4 != null and temp4 != '' " >
	        		A.temp_4 = #{temp4},
	      		</if>
    </set>
    where A.id = #{id}
  </update>
  
   <select resultMap="BaseResultMap" parameterType="java.lang.String" id="findQrcodeByIdentityNo" >
   	select <include refid="Base_Column_List" /> from t_merchant_qrcode A 
   	INNER JOIN t_merchant_cashier_qr cr on A.qr_code=cr.qr_code where cr.cashier_no=#{identityNo} 
   	and cr.is_cashier='2' and cr.status='1' and cr.record_status='Y'
   </select>
   
    <select id="findAllMerchantQrcode" parameterType="com.hfepay.commons.criteria.Criteria" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
     from t_merchant_qrcode A
    <if test="_parameter != null and _parameter != '' " >
      <where >
      	<include refid="channel_filter" />
        <include refid="Global.Where_Clause" />
      </where>
    </if>
    <if test="hasOrderBy" >
      order by
      <foreach collection="orderBys" item="orderBy" separator="," > ${orderBy} </foreach>
    </if>
  </select>
   
   
   
   <select id="findPagingResultSelf" parameterType="com.hfepay.commons.criteria.Criteria" resultMap="BaseResultMapDTO" >
	select <include refid="Base_Column_List" />,A.is_cashier as A_is_cashier, qid as a_qid from (
	    select c.*,qr.is_cashier,qr.id as qid from t_merchant_qrcode c LEFT JOIN 
		(select * from t_merchant_cashier_qr where record_status='Y') qr on c.qr_code=qr.qr_code
		 ORDER BY is_cashier desc
	 ) A
    <if test="_parameter != null and _parameter != '' " >
      <where >
        <include refid="Global.Where_Clause" />
      </where>
    </if>
     group by A.qr_code
    </select>
    
     <select id="countPagingResultSelf" parameterType="com.hfepay.commons.criteria.Criteria" resultType="java.lang.Integer" >
	select count(1) from (
	select A.id from (
	    select c.*,qr.is_cashier,qr.id as qid from t_merchant_qrcode c LEFT JOIN 
		(select * from t_merchant_cashier_qr where record_status='Y') qr on c.qr_code=qr.qr_code
		 ORDER BY is_cashier desc
	 ) A
    <if test="_parameter != null and _parameter != '' " >
      <where >
        <include refid="Global.Where_Clause" />
      </where>
    </if>
     group by A.qr_code
     ) B
    </select>
</mapper>

